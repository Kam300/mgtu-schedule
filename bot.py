import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "7808052232:AAEe0RDB5JLwxFCEAsjw8NE02RSB8yxMwMw"  # –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather
# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ URL –≤–∞—à–µ–≥–æ —Ä–∞–∑–º–µ—â–µ–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
WEB_APP_URL = "https://mgtu-schedule.onrender.com"  # –í–∞—à URL –Ω–∞ Render


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π Mini App"""
    user = update.effective_user

    keyboard = [[
        InlineKeyboardButton(
            "üìÖ –û—Ç–∫—Ä—ã—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è",
            web_app=WebAppInfo(url=WEB_APP_URL)
        )
    ]]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_html(
        f"–ü—Ä–∏–≤–µ—Ç, {user.mention_html()}! üëã\n\n"
        f"üéì <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –°–ü–û –ú–ì–¢–£</b>\n\n"
        f"–≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –±—ã—Å—Ç—Ä–æ –Ω–∞–π—Ç–∏ –∏ —Å–∫–∞—á–∞—Ç—å:\n"
        f"‚Ä¢ üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–∞–Ω—è—Ç–∏–π 1 –∏ 2 —Å–µ–º–µ—Å—Ç—Ä–∞\n"
        f"‚Ä¢ üîÑ –ó–∞–º–µ–Ω—ã –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏\n"
        f"‚Ä¢ üìä –§–∞–π–ª—ã –≤—Å–µ—Ö –æ—Ç–¥–µ–ª–µ–Ω–∏–π –°–ü–û\n\n"
        f"–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:",
        reply_markup=reply_markup
    )


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"""
    help_text = """
üÜò <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>

<b>–ö–æ–º–∞–Ω–¥—ã:</b>
/start - –û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

<b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:</b>
‚Ä¢ üîç –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
‚Ä¢ üìÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–º–µ–Ω –ø–æ –¥–∞—Ç–µ
‚Ä¢ üì± –£–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
‚Ä¢ ‚¨áÔ∏è –ë—ã—Å—Ç—Ä–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ Excel

<b>–ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö:</b>
‚Ä¢ –û—Ç–¥–µ–ª–µ–Ω–∏–µ ‚Ññ1 "–û–±—â–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞"
‚Ä¢ –û—Ç–¥–µ–ª–µ–Ω–∏–µ ‚Ññ2 "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞"  
‚Ä¢ –û—Ç–¥–µ–ª–µ–Ω–∏–µ ‚Ññ3 "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞, —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ —Å—Ñ–µ—Ä—ã –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è"
‚Ä¢ –ó–∞–º–µ–Ω—ã –¥–ª—è 1 –∏ 2 —Å–µ–º–µ—Å—Ç—Ä–æ–≤

–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –Ω–∞–∂–º–∏ /start
    """

    await update.message.reply_html(help_text)


async def handle_web_app_data(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∑ Mini App"""
    data = update.effective_message.web_app_data.data

    try:
        import json
        app_data = json.loads(data)

        if app_data.get('action') == 'scan_completed':
            files_count = app_data.get('files_count', 0)
            await update.message.reply_text(
                f"‚úÖ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n"
                f"–ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {files_count}\n\n"
                f"üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ '–°–∫–∞—á–∞—Ç—å' –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤."
            )
        elif app_data.get('action') == 'file_downloaded':
            filename = app_data.get('filename', '—Ñ–∞–π–ª')
            await update.message.reply_text(
                f"üì• –§–∞–π–ª '{filename}' —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!\n"
                f"üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É –∑–∞–≥—Ä—É–∑–æ–∫ –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞."
            )
        elif app_data.get('action') == 'request_file':
            file_index = app_data.get('file_index')
            user_id = app_data.get('user_id')
            
            if file_index is not None:
                # Send file to user
                try:
                    import requests
                    download_url = f"{WEB_APP_URL}/download/{file_index}"
                    
                    await update.message.reply_text(
                        f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ñ–∞–π–ª...\n"
                        f"üîó –°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {download_url}\n\n"
                        f"üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É, —á—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª."
                    )
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {e}")
                    await update.message.reply_text(
                        f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞.\n"
                        f"üîó –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∫–∞—á–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é: {WEB_APP_URL}/download/{file_index}"
                    )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö WebApp: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."
        )


def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebApp
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_web_app_data))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("ü§ñ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    application.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == '__main__':
    main()
